/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import {
  z as zod
} from 'zod'

/**
 * @summary Auth:Jwt.Login
 */
export const authJwtLoginAuthLoginPostResponse = zod.any()

/**
 * @summary Auth:Jwt.Logout
 */
export const authJwtLogoutAuthLogoutPostResponse = zod.any()

/**
 * @summary Register:Register
 */
export const registerRegisterAuthRegisterPostBody = zod.object({
  "email": zod.string().email(),
  "password": zod.string(),
  "is_active": zod.boolean().or(zod.null()).optional(),
  "is_superuser": zod.boolean().or(zod.null()).optional(),
  "is_verified": zod.boolean().or(zod.null()).optional()
})

/**
 * @summary Reset:Forgot Password
 */
export const resetForgotPasswordAuthForgotPasswordPostBody = zod.object({
  "email": zod.string().email()
})

/**
 * @summary Reset:Reset Password
 */
export const resetResetPasswordAuthResetPasswordPostBody = zod.object({
  "token": zod.string(),
  "password": zod.string()
})

export const resetResetPasswordAuthResetPasswordPostResponse = zod.any()

/**
 * @summary Verify:Request-Token
 */
export const verifyRequestTokenAuthRequestVerifyTokenPostBody = zod.object({
  "email": zod.string().email()
})

/**
 * @summary Verify:Verify
 */
export const verifyVerifyAuthVerifyPostBody = zod.object({
  "token": zod.string()
})

export const verifyVerifyAuthVerifyPostResponse = zod.object({
  "id": zod.string(),
  "email": zod.string().email(),
  "is_active": zod.boolean().optional(),
  "is_superuser": zod.boolean().optional(),
  "is_verified": zod.boolean().optional()
})

